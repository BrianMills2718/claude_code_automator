[
  "tests/integration/test_cli_workflow.py::TestCLIWorkflowIntegration::test_analyze_command_with_mock_data",
  "tests/integration/test_cli_workflow.py::TestCLIWorkflowIntegration::test_command_validation_integration",
  "tests/integration/test_cli_workflow.py::TestCLIWorkflowIntegration::test_environment_variable_handling",
  "tests/integration/test_cli_workflow.py::TestCLIWorkflowIntegration::test_fetch_command_integration",
  "tests/integration/test_cli_workflow.py::TestCLIWorkflowIntegration::test_help_command_integration",
  "tests/integration/test_cli_workflow.py::TestCLIWorkflowIntegration::test_invalid_command_handling",
  "tests/integration/test_cli_workflow.py::TestCLIWorkflowIntegration::test_logging_configuration",
  "tests/integration/test_cli_workflow.py::TestCLIWorkflowIntegration::test_main_entry_point_no_args",
  "tests/integration/test_cli_workflow.py::TestCLIWorkflowIntegration::test_search_command_basic",
  "tests/integration/test_data_flow.py::TestDataFlowIntegration::test_cache_integration",
  "tests/integration/test_data_flow.py::TestDataFlowIntegration::test_complete_data_flow",
  "tests/integration/test_data_flow.py::TestDataFlowIntegration::test_data_flow_with_pipeline_failure",
  "tests/integration/test_data_flow.py::TestDataFlowIntegration::test_data_flow_with_repository_failure",
  "tests/integration/test_data_flow.py::TestDataFlowIntegration::test_data_retrieval_integration",
  "tests/integration/test_data_pipeline_ml_integration.py::TestDataPipelineMLIntegration::test_cross_validation_data_preparation",
  "tests/integration/test_data_pipeline_ml_integration.py::TestDataPipelineMLIntegration::test_data_pipeline_ml_data_quality",
  "tests/integration/test_data_pipeline_ml_integration.py::TestDataPipelineMLIntegration::test_error_handling_ml_pipeline",
  "tests/integration/test_data_pipeline_ml_integration.py::TestDataPipelineMLIntegration::test_feature_engineering_pipeline_integration",
  "tests/integration/test_data_pipeline_ml_integration.py::TestDataPipelineMLIntegration::test_model_training_data_splits",
  "tests/integration/test_data_pipeline_ml_integration.py::TestDataPipelineMLIntegration::test_real_time_ml_data_integration",
  "tests/integration/test_data_pipeline_ml_integration.py::TestDataPipelineMLIntegration::test_repository_ml_batch_retrieval",
  "tests/integration/test_ml_risk_integration.py::TestMLRiskIntegration::test_backtesting_data_structure",
  "tests/integration/test_ml_risk_integration.py::TestMLRiskIntegration::test_cli_risk_analysis_integration",
  "tests/integration/test_ml_risk_integration.py::TestMLRiskIntegration::test_model_performance_metrics_preparation",
  "tests/integration/test_ml_risk_integration.py::TestMLRiskIntegration::test_portfolio_correlation_matrix_preparation",
  "tests/integration/test_ml_risk_integration.py::TestMLRiskIntegration::test_portfolio_optimization_data_structure",
  "tests/integration/test_ml_risk_integration.py::TestMLRiskIntegration::test_risk_data_pipeline_integration",
  "tests/integration/test_ml_risk_integration.py::TestMLRiskIntegration::test_risk_metrics_calculation_preparation",
  "tests/integration/test_ml_risk_integration.py::TestMLRiskIntegration::test_risk_model_feature_engineering",
  "tests/integration/test_ml_risk_integration.py::TestMLRiskIntegration::test_value_at_risk_data_preparation",
  "tests/integration/test_ml_risk_integration.py::TestMLRiskIntegration::test_volatility_calculation_integration",
  "tests/integration/test_technical_analysis_integration.py::TestTechnicalAnalysisIntegration::test_cli_analysis_integration",
  "tests/integration/test_technical_analysis_integration.py::TestTechnicalAnalysisIntegration::test_data_aggregation_for_multiple_timeframes",
  "tests/integration/test_technical_analysis_integration.py::TestTechnicalAnalysisIntegration::test_data_consistency_for_technical_indicators",
  "tests/integration/test_technical_analysis_integration.py::TestTechnicalAnalysisIntegration::test_data_pipeline_for_technical_analysis",
  "tests/integration/test_technical_analysis_integration.py::TestTechnicalAnalysisIntegration::test_error_handling_in_technical_analysis_workflow",
  "tests/integration/test_technical_analysis_integration.py::TestTechnicalAnalysisIntegration::test_repository_time_series_retrieval",
  "tests/test_data_sources/test_base.py::test_market_data_creation",
  "tests/test_data_sources/test_base.py::test_market_data_dict_conversion",
  "tests/test_data_sources/test_base.py::test_market_data_validation",
  "tests/test_data_sources/test_yahoo_finance.py::TestYahooFinanceAdapter::test_create_market_data",
  "tests/test_data_sources/test_yahoo_finance.py::TestYahooFinanceAdapter::test_get_daily_prices_api_error",
  "tests/test_data_sources/test_yahoo_finance.py::TestYahooFinanceAdapter::test_get_daily_prices_success",
  "tests/test_data_sources/test_yahoo_finance.py::TestYahooFinanceAdapter::test_get_intraday_prices_success",
  "tests/test_data_sources/test_yahoo_finance.py::TestYahooFinanceAdapter::test_search_symbols",
  "tests/test_integration/test_data_flow.py::TestDataFlowIntegration::test_cache_integration",
  "tests/test_integration/test_data_flow.py::TestDataFlowIntegration::test_complete_data_flow",
  "tests/test_integration/test_data_flow.py::TestDataFlowIntegration::test_data_flow_with_pipeline_failure",
  "tests/test_integration/test_data_flow.py::TestDataFlowIntegration::test_data_flow_with_repository_failure",
  "tests/test_integration/test_data_flow.py::TestDataFlowIntegration::test_data_retrieval_integration",
  "tests/test_processing/test_pipeline.py::TestDataPipeline::test_fetch_data_multiple_sources",
  "tests/test_processing/test_pipeline.py::TestDataPipeline::test_fetch_data_no_sources",
  "tests/test_processing/test_pipeline.py::TestDataPipeline::test_fetch_data_source_failure",
  "tests/test_processing/test_pipeline.py::TestDataPipeline::test_fetch_data_success",
  "tests/test_processing/test_pipeline.py::TestDataPipeline::test_fetch_data_with_interval",
  "tests/test_processing/test_pipeline.py::TestDataPipeline::test_pipeline_initialization",
  "tests/test_processing/test_pipeline.py::TestDataPipeline::test_pipeline_initialization_empty",
  "tests/test_storage/test_models.py::TestMarketDataModel::test_market_data_model_creation",
  "tests/test_storage/test_models.py::TestMarketDataModel::test_market_data_model_persistence",
  "tests/test_storage/test_models.py::TestMarketDataModel::test_market_data_model_uniqueness",
  "tests/test_storage/test_repository.py::TestDataRepository::test_get_market_data_no_database",
  "tests/test_storage/test_repository.py::TestDataRepository::test_get_market_data_success",
  "tests/test_storage/test_repository.py::TestDataRepository::test_repository_initialization_cache_failure",
  "tests/test_storage/test_repository.py::TestDataRepository::test_repository_initialization_db_failure",
  "tests/test_storage/test_repository.py::TestDataRepository::test_repository_initialization_success",
  "tests/test_storage/test_repository.py::TestDataRepository::test_save_market_data_no_database",
  "tests/test_storage/test_repository.py::TestDataRepository::test_save_market_data_success",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_adapter_initialization_no_api_key",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_adapter_initialization_success",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_cleanup_old_requests",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_create_api_operation",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_create_api_operation_non_tuple",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_create_market_data_from_values",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_execute_api_operation_error",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_execute_api_operation_success",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_extract_price_fields",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_format_symbol_match",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_get_daily_prices",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_get_intraday_prices",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_get_outputsize_for_limit",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_handle_api_error",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_is_date_in_range",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_is_request_within_window",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_is_within_rate_limit",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_manage_rate_limit_exceeded",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_manage_rate_limit_success",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_parse_field_value",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_process_time_series_data",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_process_time_series_data_with_date_filter",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_process_time_series_data_with_limit",
  "tests/unit/test_alpha_vantage.py::TestAlphaVantageAdapter::test_search_symbols",
  "tests/unit/test_alpha_vantage.py::TestTimeSeriesConfig::test_time_series_config_creation",
  "tests/unit/test_alpha_vantage.py::TestTimeSeriesConfig::test_time_series_config_minimal",
  "tests/unit/test_base.py::TestDataSourceBase::test_complete_implementation_methods",
  "tests/unit/test_base.py::TestDataSourceBase::test_complete_implementation_works",
  "tests/unit/test_base.py::TestDataSourceBase::test_concrete_implementation_required",
  "tests/unit/test_base.py::TestDataSourceBase::test_data_source_base_abstract_methods",
  "tests/unit/test_base.py::TestDataSourceBase::test_data_source_base_is_abstract",
  "tests/unit/test_base.py::TestDataSourceBase::test_data_source_base_method_signatures",
  "tests/unit/test_base.py::TestMarketData::test_market_data_creation",
  "tests/unit/test_base.py::TestMarketData::test_market_data_dict_conversion",
  "tests/unit/test_base.py::TestMarketData::test_market_data_edge_cases",
  "tests/unit/test_base.py::TestMarketData::test_market_data_equality",
  "tests/unit/test_base.py::TestMarketData::test_market_data_inequality",
  "tests/unit/test_base.py::TestMarketData::test_market_data_model_config",
  "tests/unit/test_base.py::TestMarketData::test_market_data_string_conversion",
  "tests/unit/test_base.py::TestMarketData::test_market_data_types",
  "tests/unit/test_base.py::TestMarketData::test_market_data_validation",
  "tests/unit/test_cli_utils.py::test_display_market_data",
  "tests/unit/test_cli_utils.py::test_display_market_data_no_title",
  "tests/unit/test_cli_utils.py::test_display_market_data_with_title",
  "tests/unit/test_cli_utils.py::test_format_change",
  "tests/unit/test_cli_utils.py::test_format_change_edge_cases",
  "tests/unit/test_cli_utils.py::test_format_volume",
  "tests/unit/test_cli_utils.py::test_format_volume_edge_cases",
  "tests/unit/test_cli_utils.py::test_parse_date_edge_cases",
  "tests/unit/test_cli_utils.py::test_parse_date_invalid",
  "tests/unit/test_cli_utils.py::test_parse_date_valid",
  "tests/unit/test_config.py::test_api_key_validation",
  "tests/unit/test_config.py::test_config_edge_cases",
  "tests/unit/test_config.py::test_config_type_validation",
  "tests/unit/test_config.py::test_get_api_key_from_env",
  "tests/unit/test_config.py::test_get_api_key_missing",
  "tests/unit/test_config.py::test_get_data_source_config",
  "tests/unit/test_config.py::test_get_database_url_default",
  "tests/unit/test_config.py::test_get_database_url_from_env",
  "tests/unit/test_config.py::test_get_redis_url_default",
  "tests/unit/test_config.py::test_get_redis_url_from_env",
  "tests/unit/test_config.py::test_validate_config_invalid_database_url",
  "tests/unit/test_config.py::test_validate_config_invalid_redis_url",
  "tests/unit/test_config.py::test_validate_config_missing_required",
  "tests/unit/test_config.py::test_validate_config_success",
  "tests/unit/test_data_pipeline.py::TestDataPipeline::test_fetch_data_empty_symbol",
  "tests/unit/test_data_pipeline.py::TestDataPipeline::test_fetch_data_invalid_dates",
  "tests/unit/test_data_pipeline.py::TestDataPipeline::test_fetch_data_multiple_sources",
  "tests/unit/test_data_pipeline.py::TestDataPipeline::test_fetch_data_no_sources",
  "tests/unit/test_data_pipeline.py::TestDataPipeline::test_fetch_data_source_failure",
  "tests/unit/test_data_pipeline.py::TestDataPipeline::test_fetch_data_success",
  "tests/unit/test_data_pipeline.py::TestDataPipeline::test_fetch_data_with_interval",
  "tests/unit/test_data_pipeline.py::TestDataPipeline::test_pipeline_initialization",
  "tests/unit/test_data_pipeline.py::TestDataPipeline::test_pipeline_initialization_empty",
  "tests/unit/test_market_data.py::test_market_data_creation",
  "tests/unit/test_market_data.py::test_market_data_dict_conversion",
  "tests/unit/test_market_data.py::test_market_data_edge_cases",
  "tests/unit/test_market_data.py::test_market_data_string_representation",
  "tests/unit/test_market_data.py::test_market_data_validation",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_all_fields_set",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_columns",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_comparison",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_creation",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_data_types",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_default_created_at",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_edge_cases",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_indexes",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_large_values",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_nullable_constraints",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_primary_key",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_repr",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_string_lengths",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_table_name",
  "tests/unit/test_storage_models.py::TestMarketDataModel::test_market_data_model_unique_constraint",
  "tests/unit/test_transforms.py::TestCleanMarketData::test_clean_empty_dataframe",
  "tests/unit/test_transforms.py::TestCleanMarketData::test_clean_fixes_ohlc_values",
  "tests/unit/test_transforms.py::TestCleanMarketData::test_clean_handles_missing_values",
  "tests/unit/test_transforms.py::TestCleanMarketData::test_clean_removes_duplicates",
  "tests/unit/test_transforms.py::TestCleanMarketData::test_clean_removes_outliers",
  "tests/unit/test_transforms.py::TestCleanMarketData::test_clean_valid_data",
  "tests/unit/test_transforms.py::TestFixOHLCValues::test_fix_invalid_high",
  "tests/unit/test_transforms.py::TestFixOHLCValues::test_fix_invalid_low",
  "tests/unit/test_transforms.py::TestFixOHLCValues::test_fix_multiple_rows",
  "tests/unit/test_transforms.py::TestFixOHLCValues::test_fix_valid_ohlc",
  "tests/unit/test_transforms.py::TestRemovePriceOutliers::test_remove_outliers_custom_parameters",
  "tests/unit/test_transforms.py::TestRemovePriceOutliers::test_remove_outliers_empty_result",
  "tests/unit/test_transforms.py::TestRemovePriceOutliers::test_remove_outliers_no_outliers",
  "tests/unit/test_transforms.py::TestRemovePriceOutliers::test_remove_outliers_preserves_structure",
  "tests/unit/test_transforms.py::TestRemovePriceOutliers::test_remove_outliers_small_dataset",
  "tests/unit/test_transforms.py::TestRemovePriceOutliers::test_remove_outliers_with_outliers",
  "tests/unit/test_validation.py::TestDataSourceResponse::test_data_source_response_edge_cases",
  "tests/unit/test_validation.py::TestDataSourceResponse::test_data_source_response_minimal",
  "tests/unit/test_validation.py::TestDataSourceResponse::test_valid_data_source_response_error",
  "tests/unit/test_validation.py::TestDataSourceResponse::test_valid_data_source_response_success",
  "tests/unit/test_validation.py::TestSearchRequest::test_search_request_limit_validation",
  "tests/unit/test_validation.py::TestSearchRequest::test_search_request_minimal",
  "tests/unit/test_validation.py::TestSearchRequest::test_search_request_query_validation",
  "tests/unit/test_validation.py::TestSearchRequest::test_valid_search_request",
  "tests/unit/test_validation.py::TestStockPrice::test_stock_price_high_validation",
  "tests/unit/test_validation.py::TestStockPrice::test_stock_price_open_close_validation",
  "tests/unit/test_validation.py::TestStockPrice::test_stock_price_positive_validation",
  "tests/unit/test_validation.py::TestStockPrice::test_stock_price_symbol_validation",
  "tests/unit/test_validation.py::TestStockPrice::test_stock_price_volume_validation",
  "tests/unit/test_validation.py::TestStockPrice::test_valid_stock_price",
  "tests/unit/test_validation.py::TestTimeSeriesRequest::test_time_series_request_date_validation",
  "tests/unit/test_validation.py::TestTimeSeriesRequest::test_time_series_request_interval_validation",
  "tests/unit/test_validation.py::TestTimeSeriesRequest::test_time_series_request_limit_validation",
  "tests/unit/test_validation.py::TestTimeSeriesRequest::test_time_series_request_minimal",
  "tests/unit/test_validation.py::TestTimeSeriesRequest::test_valid_time_series_request",
  "tests/unit/test_yahoo_finance.py::TestYahooFinanceAdapter::test_adapter_initialization",
  "tests/unit/test_yahoo_finance.py::TestYahooFinanceAdapter::test_create_market_data",
  "tests/unit/test_yahoo_finance.py::TestYahooFinanceAdapter::test_create_market_data_edge_cases",
  "tests/unit/test_yahoo_finance.py::TestYahooFinanceAdapter::test_create_market_data_invalid_data",
  "tests/unit/test_yahoo_finance.py::TestYahooFinanceAdapter::test_get_daily_prices_api_error",
  "tests/unit/test_yahoo_finance.py::TestYahooFinanceAdapter::test_get_daily_prices_success",
  "tests/unit/test_yahoo_finance.py::TestYahooFinanceAdapter::test_get_intraday_prices_success",
  "tests/unit/test_yahoo_finance.py::TestYahooFinanceAdapter::test_search_symbols"
]