{
  "mcpServers": {
    "cc-automator-tools": {
      "command": "python",
      "args": ["mcp_server.py"],
      "description": "Safe tools for CC_AUTOMATOR4 - prevents TaskGroup errors"
    }
  },
  "phases": {
    "research": {
      "preferred_mcps": ["cc-automator-tools"],
      "fallback_tools": ["Read", "Write"]
    },
    "planning": {
      "preferred_mcps": ["cc-automator-tools"],
      "fallback_tools": ["Read", "Write"]
    },
    "implement": {
      "preferred_mcps": ["cc-automator-tools"],
      "fallback_tools": ["Read", "Write", "Edit", "MultiEdit"]
    },
    "test": {
      "preferred_mcps": ["cc-automator-tools"],
      "fallback_tools": ["Bash"]
    },
    "integration": {
      "preferred_mcps": ["cc-automator-tools"],
      "fallback_tools": ["Bash"]
    }
  },
  "installation": {
    "notes": [
      "Run 'npm install -g <package>' for each MCP server",
      "Some servers may require additional setup or API keys",
      "Check individual server documentation for requirements"
    ],
    "install_commands": [
      "npm install -g pskill9/web-search",
      "npm install -g @exa-ai/exa-mcp-server", 
      "npm install -g @anthropic/ref",
      "npm install -g @anthropic/github",
      "npm install -g juehang/vscode-mcp-server",
      "npm install -g wonderwhy-er/DesktopCommanderMCP",
      "npm install -g pydantic/pydantic-ai/mcp-run-python",
      "npm install -g @anthropic/firecrawl"
    ]
  }
}